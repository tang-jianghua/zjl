package com.mfangsoft.zhuangjialong.app.aa;

import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
* @description：
* @author：Jianghua.Tang 
* @date：2016年11月14日
* 
*/

public class Test {

	
	
	/*public static void main(String[] args) {
		String []  a ={"18710037519",
				"13716964407",
				"15110227991",
				"13701069649",
				"18810017671",
				"15201656112",
				"13651219812",
				"15810200096",
				"18201314933",
				"13521520027",
				"15010910337",
				"15833032516",
				"13552436348",
				"18201283779",
				"13683108913",
				"13641316495",
				"15030003742",
				"13520608477",
				"15030072901",
				"18244609033",
				"15011503758",
				"15901527827",
				"13693334186",
				"18811374815"};
		
		String []  b ={"18710037519",
				"17310379853",
				"13716964407",
				"15110227991",
				"13701069649",
				"18911334986",
				"18810017671",
				"15201656112",
				"13651219812",
				"13146771711",
				"15810200096",
				"17310135396",
				"13261350886",
				"18201314933",
				"13521520027",
				"13121608707",
				"15010910337",
				"15833032516",
				"13552436348",
				"18201283779",
				"13683108913",
				"13641316495",
				"15030003742",
				"13520608477",
				"18510962446",
				"15030072901",
				"18244609033",
				"15011503758",
				"15901527827",
				"13693334186",
				"18811374815",
				"18201029620",
				"15811469061",
				"13701333509",
				"18232460817",
				"13681034175",
				"15110252287",
				"15201068727",
				"18201020933",
				"13641316848",
				"13811059128",
				"18612365541",
				"18911565427",
				"17310042009",
				"13311263700",
				"15031963909",
				"13701339458",
				"18519767476",
				"18503320204",
				"13810530523",
				"17319399310",
				"18811321009",
				"13681340138",
				"13911166348",
				"15910589735",
				"18501263619",
				"15010914627",
				"18330297779",
				"15501257334",
				"13718007456",
				"18911796835",
				"18513693799",
				"15120068237",
				"18612079060",
				"13284476203",
				"18612720766",
				"18810118114",
				"13381014402",
				"18500327761",
				"13520543113",
				"18811578019",
				"18613888852",
				"17710593281",
				"13641172689",
				"18811579747",
				"13012030985",
				"15910461269",
				"17801156511",
				"15611003060",
				"18511336213",
				"15101179460",
				"15614116859",
				"15210887413",
				"18811348611",
				"13120238403",
				"17310515286",
				"15201227939",
				"18600155561",
				"18600690694",
				"13718697304",
				"18911927919",
				"13436840805",
				"17744524247",
				"15010087877",
				"15801043309",
				"13231832797",
				"17701030418",
				"13522546017",
				"18510597702",
				"18500242958",
				"18813147184",
				"13911277317",
				"13501019107",
				"15011182928",
				"13810150806",
				"18612625490",
				"15620592420",
				"18515041285",
				"18800058525",
				"13522998108",
				"18511200934",
				"15600729269",
				"13212290885",
				"13671151953",
				"15201047759",
				"18810943120",
				"18600809772",
				"18310084487",
				"15311431198",
				"13261258981",
				"17710939686",
				"15910878951",
				"15801444115",
				"15203304970",
				"13581788126",
				"18832033003",
				"18632962955",
				"15833061699",
				"13651236124",
				"13552419207",
				"13910305378",
				"13501138891",
				"13260191950",
				"13810315099",
				"15701623903",
				"13581735258",
				"13832359004",
				"18301112887",
				"13693370711",
				"13220184939",
				"18510633768",
				"13641233351",
				"18211068788",
				"18801207271",
				"18910176317",
				"13521198932",
				"13439219121",
				"18710074634",
				"15801495643",
				"13901363465",
				"13501322825",
				"13522327863",
				"13161981137",
				"13146033429",
				"18611210584",
				"18611647744",
				"13021937529",
				"18611105594",
				"18231483828",
				"18710277753",
				"17778088804",
				"15613923567",
				"18210649586",
				"13693577638",
				"13521520809",
				"13911368911",
				"15731105986",
				"13501381755",
				"13501203216",
				"15201189367",
				"15910308183",
				"15910221225",
				"15901311351",
				"15311117011",
				"13911481000",
				"18810767714",
				"13810461974",
				"13691536203",
				"13552161597",
				"18611462712",
				"13693597384",
				"18801046217",
				"18510255139",
				"18618206772",
				"18630435088",
				"18610558003",
				"18513030857",
				"18810651857",
				"13811922195",
				"13366123127",
				"13651306953",
				"18600473412",
				"13691356177",
				"13520265992",
				"15632980339",
				"13833944740",
				"15201009602",
				"13681308209",
				"18833259284",
				"15624968525",
				"13716065017",
				"18701000141",
				"13716659095",
				"13021100122",
				"13671162443",
				"15120039363",
				"15810128025",
				"13552179905",
				"15600512077",
				"18911925582",
				"18612376123",
				"13552438226",
				"13731355848",
				"13810676840",
				"15810552130",
				"15932293700",
				"13661306830",
				"15600022430",
				"18811744064",
				"15611761851",
				"18811756268",
				"13716022341",
				"18813175283",
				"17310506540",
				"17310049146",
				"18010465112",
				"15810088710",
				"13321149782",
				"15122607909",
				"15611768268",
				"15611762282",
				"18810637332",
				"13311226810",
				"18611217771",
				"15810076381",
				"18210358819",
				"18801056370",
				"13683005645",
				"15311418847",
				"13488895866",
				"13426279584",
				"13520533263",
				"13621030230",
				"13070115206",
				"18811331003",
				"13439118563",
				"18510404243",
				"13011298575",
				"15611760087",
				"18618333781",
				"18910422629",
				"13001036722",
				"15611714450",
				"15611820789",
				"15100624353",
				"15901316325",
				"15911139518",
				"15910732016",
				"18519312983",
				"13439111532",
				"18600533294",
				"15718840160",
				"13520691219",
				"15910635156",
				"13333280639",
				"13051581080",
				"18631439930",
				"18611119315",
				"13263111055",
				"17710423941",
				"15311370027",
				"18311410221",
				"18301078836",
				"18610686647",
				"18610658321",
				"13718687281",
				"13661120330",
				"18903282358",
				"13126815813",
				"13001227578",
				"13651101923",
				"13426258698",
				"18810025663",
				"15910914166",
				"13611385346",
				"18810655721",
				"13661013877",
				"13522671411",
				"13641050123",
				"13520587429",
				"13522968289",
				"13701129121",
				"13552063481",
				"13661039400",
				"13651243873",
				"15210230843",
				"15810559372",
				"13611163719",
				"18510777726",
				"15611769589",
				"15712945008",
				"15210834706",
				"15810602996",
				"13341046892",
				"18810558355",
				"18910616526",
				"13146892399",
				"18710161071",
				"13552817354",
				"13520848246",
				"13488871909",
				"13522231887",
				"18500939559",
				"13520422690",
				"18310135598",
				"18514540110",
				"13121807200",
				"13901112301",
				"18519264501",
				"15110111191",
				"15810332474",
				"15210482378",
				"18600633471",
				"13701142722",
				"17896099696",
				"15712869310",
				"13466411825",
				"15810472031",
				"18911641394",
				"18501956352",
				"13021961712",
				"13070170877",
				"13911975822",
				"15810999827",
				"18610027783",
				"15210350254",
				"18210063328",
				"13001221339",
				"13522116578",
				"15701358352",
				"15201509918",
				"18513606263",
				"18810628150",
				"15611760630",
				"13488875504",
				"15032798830",
				"18310829961",
				"13311144089",
				"18611564559",
				"13161245559",
				"18811637635",
				"18500104946",
				"15369621214",
				"18519310140",
				"13699142726",
				"18811140370",
				"15801359162",
				"13522748800",
				"13391507678",
				"18101120305",
				"13263296175",
				"18010459170",
				"18911960796",
				"18810347293",
				"15611760012",
				"18910393097",
				"13581980023",
				"13161916423",
				"15311955515",
				"18810247045",
				"15726657756",
				"13911686633",
				"13681296900",
				"18911127483",
				"18500799188",
				"18513118402",
				"13911345737",
				"13520032989",
				"15652965246",
				"15330293760",
				"18511558386",
				"18611557012",
				"15652099673",
				"18701376752",
				"13621022151",
				"18201633536",
				"18801132850",
				"18101023671",
				"15726639163",
				"18911773012",
				"15313951876",
				"18518308152",
				"18613882345",
				"18618315558",
				"13601267115",
				"15210820525",
				"15652853580",
				"15910455003",
				"18612936423",
				"13699138827",
				"13910161466",
				"18610579690",
				"18333185098",
				"18601900481",
				"18810550983",
				"15010541685",
				"15811175038",
				"18810710957",
				"15910438608",
				"15810160688",
				"13121597208",
				"18500185186",
				"13671321900",
				"13693119514",
				"13611340031",
				"18810272055",
				"13901186477",
				"13051377646",
				"15601380209",
				"15810757877",
				"15810848897",
				"13910325311",
				"18301693497",
				"17746501476",
				"18622314881",
				"13520428827",
				"13520372686",
				"15611488775",
				"15801102360",
				"18600553139",
				"18911247075",
				"13021268614",
				"18733611003",
				"13501382249",
				"13621194318",
				"18801189113",
				"13021942189",
				"18810996177",
				"13522968102",
				"18211009544",
				"18610610512",
				"18612078350",
				"13001453032",
				"13910797809",
				"13651200931",
				"15810714428",
				"13522991172",
				"18601213669",
				"13552442899",
				"13910853610",
				"18600885884",
				"18611608113",
				"13126518882",
				"13810362610",
				"18612032668",
				"15011450798",
				"15311760489",
				"18610355377",
				"15120061081",
				"13699236331",
				"13240005045",
				"13910425305",
				"15652969725",
				"13552088006",
				"13161713321",
				"13681006066",
				"15910677345",
				"18811732591",
				"15811155410",
				"13051551585",
				"13521953090",
				"13366666805",
				"13693312419",
				"18610046230",
				"13466510062",
				"18611094761",
				"13718086077",
				"18600738391",
				"13911533911",
				"15010199969",
				"13810786821",
				"13521676502",
				"18500301205",
				"15910885176",
				"18910399558",
				"18611339245",
				"13426026743",
				"15117932983",
				"18722022324",
				"15631220845",
				"15321672189",
				"13041289968",
				"13911634363",
				"13810780119",
				"15311412543",
				"13167337266",
				"13552693602",
				"18801032605",
				"15624984160",
				"18910239334",
				"13801383710",
				"13811505527",
				"13366318989",
				"17710321341",
				"13810557642",
				"13501185015",
				"13520005831",
				"13436611166",
				"13810929228",
				"13520531331",
				"13651190483",
				"13671061569",
				"13661028550",
				"17326815908",
				"13521102416",
				"13661180543",
				"18601354119",
				"13811465039",
				"13611186913",
				"15811558661",
				"13911970763",
				"13911032420",
				"18510919517",
				"15801660162",
				"13439071904",
				"18612201322",
				"18710172517",
				"13811673786",
				"13501324378",
				"13693310750",
				"13910273474",
				"18911727169",
				"13911640039",
				"13911640348",
				"13810361506",
				"15699918510",
				"18901082880",
				"13611368887",
				"13331150287",
				"18301392904",
				"18210263059",
				"18310170958",
				"15811196725",
				"13164292450",
				"18811758618",
				"13488770599",
				"13810926187",
				"18210814973",
				"18811762921",
				"15801032292",
				"13611002078",
				"13146610688",
				"13717956811",
				"18810766364",
				"15110120206",
				"13910334176",
				"13717919613",
				"18801200093",
				"13717949654",
				"13718825643",
				"13501197895",
				"18610116903",
				"18610116902",
				"13331029661",
				"13302166136",
				"18701453621",
				"13581578334",
				"13811033046",
				"13811513624",
				"18001373392",
				"13126686109",
				"13693336321",
				"18811754875",
				"18201092042",
				"15611726375",
				"13241862340",
				"18501928116",
				"15210323698",
				"13691585838",
				"13520135189",
				"15110167416",
				"18810260926",
				"15510056668",
				"13810064382",
				"18600805618",
				"13381021228",
				"13911708233",
				"13699148027",
				"13810662603",
				"13501048144",
				"13910897090",
				"15321179355",
				"13611080330",
				"18701698992",
				"15383993910",
				"17801078780",
				"13403220098",
				"15811059175",
				"13552780407",
				"13683123912",
				"18811045312",
				"18813128089",
				"18210129055",
				"13810871539",
				"15120008940",
				"13911211970",
				"18811397717",
				"18501284701",
				"13810436756",
				"15810188566",
				"18612521275",
				"18201594372",
				"15201302870",
				"13341180332",
				"18701549796",
				"13161116995",
				"15600018518",
				"13501030955",
				"18612865243",
				"15210296211",
				"13911985346",
				"13693076505",
				"13261866057",
				"18910913828",
				"13381188956",
				"18810922678",
				"15611404515",
				"13718265386",
				"18500153980",
				"18310108680",
				"15010912566",
				"18600599796",
				"18911880717",
				"18600269903",
				"13366386737",
				"13911732196",
				"13910089148",
				"13811855932",
				"13901229371",
				"13801124214",
				"17701043100",
				"18500032979",
				"13911527686",
				"13511052194",
				"13810522264",
				"13021938290",
				"13426350559",
				"13811586049",
				"13693690358",
				"18910312031",
				"13552981625",
				"13810489233",
				"13683100532",
				"18911523560",
				"13301220518",
				"13811770311",
				"18810846678",
				"13810388304",
				"18311382599",
				"15811047150",
				"18611378233",
				"13466583480",
				"18515359768",
				"13717781210"};
		List<String> cmcc = new ArrayList<>();
		
		for (int i = 0; i < a.length; i++) {
			if("CMCC".equals(MobileUtil.validateMobile(a[i]))){
				cmcc.add(a[i]);
				System.out.println(a[i]);
			}
		}
		//System.out.println(cmcc);
		int m=0;
		
		int n=b.length;
		
		for (int i = 0; i < b.length; i++) {
			for (int j = 0; j < a.length; j++) {
				if(b[i].equals(a[j])){
					m+=1;
					System.out.println(b[i]);
					b[i]="";
				}
			}
		}
		System.out.println("                                                   "+n);
		for (int i = 0; i < b.length; i++) {
			if(!"".equals(b[i])){
				n-=1;
				System.out.println("\""+b[i]+"\",");
			}
		}
		System.out.println("                                                   "+n);
	}
	*/
	
	
	
/*	public static void main(String[] args) {
		String []  a ={"18710037519",
				"13716964407",
				"15110227991",
				"13701069649",
				"18810017671",
				"15201656112",
				"13651219812",
				"15810200096",
				"18201314933",
				"13521520027",
				"15010910337",
				"15833032516",
				"13552436348",
				"18201283779",
				"13683108913",
				"13641316495",
				"15030003742",
				"13520608477",
				"15030072901",
				"18244609033",
				"15011503758",
				"15901527827",
				"13693334186",
				"18811374815"};
		String []  b ={"13012030985",
				"13284476203",
				"13341046892",
				"13693370711",
				"15631220845",
				"17801156511",
				"17896099696",
				"18631439930"};
		
		for (int i = 0; i < a.length; i++) {
			for (int j = 0; j < b.length; j++) {
				if(a[i].equals(b[j])){
					System.out.println(a[i]);
				}
			}
		}
		
		for (int i = 0; i < b.length; i++) {
			System.out.println(MobileUtil.validateMobile(b[i]));
		}

		
	}*/
	
	 /*public void saveToFile(String destUrl) {  
	 FileOutputStream fos = null;  
	 BufferedInputStream bis = null;  
	 HttpURLConnection httpUrl = null;  
	 URL url = null;  
	 int BUFFER_SIZE = 1024;  
	 byte[] buf = new byte[BUFFER_SIZE];  
	 int size = 0;  
	 try {  
	 url = new URL(destUrl);  
	 httpUrl = (HttpURLConnection) url.openConnection();  
	 httpUrl.connect();  
	 bis = new BufferedInputStream(httpUrl.getInputStream());  
	 fos = new FileOutputStream("c:\\haha.gif");  
	 while ((size = bis.read(buf)) != -1) {  
	 fos.write(buf, 0, size);  
	 }  
	 fos.flush();  
	 } catch (IOException e) {  
	 } catch (ClassCastException e) {  
	 } finally {  
	 try {  
	 fos.close();  
	 bis.close();  
	 httpUrl.disconnect();  
	 } catch (IOException e) {  
	 } catch (NullPointerException e) {  
	 }  
	 }  
	 }  
	 public static void main(String[] args) {  
	 // TODO Auto-generated method stub  
	  
	 Test dw=new Test();  
	 dw.saveToFile("https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=1176426371,2712811945");  
	 }  */
	
	public static void main(String[] args) {
		List<Map<String, Object>> list = new ArrayList<>();
		Map<String, Object> map_1 = new HashMap<>();
		map_1.put("product_id", 1);
		map_1.put("enterprise_id", 1);
		Set<String> keySet = map_1.keySet();
		for (String string : keySet) {
			System.out.println(string);	
		System.out.println(map_1.get(string));	
		}
		
	}
}
