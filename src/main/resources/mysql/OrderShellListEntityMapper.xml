<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mfangsoft.zhuangjialong.integration.order.mapper.OrderShellListEntityMapper">
  <resultMap id="BaseResultMap" type="com.mfangsoft.zhuangjialong.integration.order.model.OrderShellListEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="shell_code" jdbcType="VARCHAR" property="shell_code" />
    <result column="shop_id" jdbcType="BIGINT" property="shop_id" />
    <result column="money_pre" jdbcType="DOUBLE" property="money_pre" />
    <result column="money_platform" jdbcType="DOUBLE" property="money_platform" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="start_time" jdbcType="TIMESTAMP" property="start_time" />
    <result column="end_time" jdbcType="TIMESTAMP" property="end_time" />
    <result column="trade_type" jdbcType="INTEGER" property="trade_type" />
    <result column="trader_id" jdbcType="BIGINT" property="trader_id" />
    <result column="money_trade" jdbcType="DOUBLE" property="money_trade" />
    <result column="trade_time" jdbcType="TIMESTAMP" property="trade_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mfangsoft.zhuangjialong.integration.order.model.OrderShellListEntity">
    <result column="memo" jdbcType="LONGVARCHAR" property="memo" />
  </resultMap>
  <sql id="Base_Column_List">
    id, shell_code, shop_id, money_pre, money_platform, create_time, start_time, end_time, trade_type, trader_id, 
    money_trade, trade_time
  </sql>
  <sql id="Blob_Column_List">
    memo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_biz_order_shell_list
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_biz_order_shell_list
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mfangsoft.zhuangjialong.integration.order.model.OrderShellListEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_biz_order_shell_list (shell_code, shop_id, money_pre, 
      money_platform, create_time, trade_type, 
      trader_id, money_trade, trade_time, 
      memo)
    values (#{shell_code,jdbcType=VARCHAR}, #{shop_id,jdbcType=BIGINT}, #{money_pre,jdbcType=DOUBLE}, 
      #{money_platform,jdbcType=DOUBLE}, #{create_time,jdbcType=TIMESTAMP}, #{trade_type,jdbcType=INTEGER}, 
      #{trader_id,jdbcType=BIGINT}, #{money_trade,jdbcType=DOUBLE}, #{trade_time,jdbcType=TIMESTAMP}, 
      #{memo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
   parameterType="com.mfangsoft.zhuangjialong.integration.order.model.OrderShellListEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_biz_order_shell_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shell_code != null">
        shell_code,
      </if>
      <if test="shop_id != null">
        shop_id,
      </if>
      <if test="money_pre != null">
        money_pre,
      </if>
      <if test="money_platform != null">
        money_platform,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="start_time != null">
        start_time,
      </if>
      <if test="end_time != null">
        end_time,
      </if>
      <if test="trade_type != null">
        trade_type,
      </if>
      <if test="trader_id != null">
        trader_id,
      </if>
      <if test="money_trade != null">
        money_trade,
      </if>
      <if test="trade_time != null">
        trade_time,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shell_code != null">
        #{shell_code,jdbcType=VARCHAR},
      </if>
      <if test="shop_id != null">
        #{shop_id,jdbcType=BIGINT},
      </if>
      <if test="money_pre != null">
        #{money_pre,jdbcType=DOUBLE},
      </if>
      <if test="money_platform != null">
        #{money_platform,jdbcType=DOUBLE},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="start_time != null">
        #{start_time,jdbcType=TIMESTAMP},
      </if>
       <if test="end_time != null">
        #{end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="trade_type != null">
        #{trade_type,jdbcType=INTEGER},
      </if>
      <if test="trader_id != null">
        #{trader_id,jdbcType=BIGINT},
      </if>
      <if test="money_trade != null">
        #{money_trade,jdbcType=DOUBLE},
      </if>
      <if test="trade_time != null">
        #{trade_time,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mfangsoft.zhuangjialong.integration.order.model.OrderShellListEntity">
    update t_biz_order_shell_list
    <set>
      <if test="shell_code != null">
        shell_code = #{shell_code,jdbcType=VARCHAR},
      </if>
      <if test="shop_id != null">
        shop_id = #{shop_id,jdbcType=BIGINT},
      </if>
      <if test="money_pre != null">
        money_pre = #{money_pre,jdbcType=DOUBLE},
      </if>
      <if test="money_platform != null">
        money_platform = #{money_platform,jdbcType=DOUBLE},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
       <if test="start_time != null">
        start_time = #{start_time,jdbcType=TIMESTAMP},
      </if>
       <if test="end_time != null">
       	end_time = #{end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="trade_type != null">
        trade_type = #{trade_type,jdbcType=INTEGER},
      </if>
      <if test="trader_id != null">
        trader_id = #{trader_id,jdbcType=BIGINT},
      </if>
      <if test="money_trade != null">
        money_trade = #{money_trade,jdbcType=DOUBLE},
      </if>
      <if test="trade_time != null">
        trade_time = #{trade_time,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mfangsoft.zhuangjialong.integration.order.model.OrderShellListEntity">
    update t_biz_order_shell_list
    set shell_code = #{shell_code,jdbcType=VARCHAR},
      shop_id = #{shop_id,jdbcType=BIGINT},
      money_pre = #{money_pre,jdbcType=DOUBLE},
      money_platform = #{money_platform,jdbcType=DOUBLE},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      start_time = #{start_time,jdbcType=TIMESTAMP},
      end_time = #{end_time,jdbcType=TIMESTAMP},
      trade_type = #{trade_type,jdbcType=INTEGER},
      trader_id = #{trader_id,jdbcType=BIGINT},
      money_trade = #{money_trade,jdbcType=DOUBLE},
      trade_time = #{trade_time,jdbcType=TIMESTAMP},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mfangsoft.zhuangjialong.integration.order.model.OrderShellListEntity">
    update t_biz_order_shell_list
    set shell_code = #{shell_code,jdbcType=VARCHAR},
      shop_id = #{shop_id,jdbcType=BIGINT},
      money_pre = #{money_pre,jdbcType=DOUBLE},
      money_platform = #{money_platform,jdbcType=DOUBLE},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      start_time = #{start_time,jdbcType=TIMESTAMP},
      end_time = #{end_time,jdbcType=TIMESTAMP},
      trade_type = #{trade_type,jdbcType=INTEGER},
      trader_id = #{trader_id,jdbcType=BIGINT},
      money_trade = #{money_trade,jdbcType=DOUBLE},
      trade_time = #{trade_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryShellOrderListByPage" parameterType="com.mfangsoft.zhuangjialong.common.model.Page" resultType="java.util.Map">
  	SELECT sl.id, sl.shell_code, sl.shop_id, sl.money_pre, sl.money_platform, date_format(sl.start_time,'%Y-%m-%d %T') as create_time, sl.trade_type, sl.trader_id, 
    sl.money_trade, sl.trade_time, sr.shell_state,
    IF(sr.shell_state = '400000',1,IF(sr.shell_state = '600000',2,IF(sr.shell_state = '300000',3,IF(sr.shell_state = '500000',4,5)))) AS sort_state,
    e.enterprise_name,p.principal,be.name AS brand_name,shop.shop_name, ifnull(temp.seller_money,0) as seller_money
FROM t_biz_order_shell_list sl
LEFT JOIN t_biz_order_shell_state_relation sr ON sr.shell_id = sl.id AND sr.state_time = (SELECT MAX(state_time) FROM t_biz_order_shell_state_relation WHERE shell_id = sr.shell_id)
LEFT JOIN t_biz_shop shop ON shop.id = sl.shop_id
LEFT JOIN t_biz_brand b ON b.id = shop.brand_id
LEFT JOIN t_biz_build_enterprise be ON be.id = b.enterprise_id
LEFT JOIN t_biz_partner p ON p.id = shop.citypartner_id
LEFT JOIN t_biz_enterprise e ON p.enterprise_id = e.id
LEFT JOIN (SELECT sl.id, ROUND(SUM(bd.amount),2) AS seller_money
FROM t_biz_order_shell_list sl
LEFT JOIN t_biz_order o ON o.shell_id = sl.id
LEFT JOIN t_biz_seller_balance_detail bd ON bd.order_id = o.id

WHERE bd.id IS NOT NULL  
GROUP BY sl.id) temp ON temp.id = sl.id

where 1=1 
	<if test="param.shell_state!=null and param.shell_state!=''">
	   and sr.shell_state = ${param.shell_state}
	</if>
	<if test="param.shell_code!=null and param.shell_code!=''">
	   and sl.shell_code = ${param.shell_code}
	</if>
	<if test="param.enterprise_id!=null and param.enterprise_id!=''">
	   and e.id = ${param.enterprise_id}
	</if>
	<if test="param.partner_id!=null and param.partner_id!=''">
	   and p.id = ${param.partner_id}
	</if>
  	<if test="param.brand_id!=null and param.brand_id!=''">
	   and b.id = ${param.brand_id}
	</if>
  	<if test="param.shop_id!=null and param.shop_id!=''">
	   and shop.id = ${param.shop_id}
	</if>
	<if test="param.enterprise_name!=null and param.enterprise_name!=''">
	   and e.enterprise_name like CONCAT('%', #{param.enterprise_name},'%')
	</if>
	<if test="param.principal!=null and param.principal!=''">
	   and p.principal like CONCAT('%', #{param.principal},'%')
	</if>
	<if test="param.brand_name!=null and param.brand_name!=''">
	   and be.name like CONCAT('%', #{param.brand_name},'%')
	</if>
	<if test="param.shop_name!=null and param.shop_name!=''">
	   and shop.shop_name like CONCAT('%', #{param.shop_name},'%')
	</if>
	<if test="param.start_time!=null and param.start_time!=''">
		and date_format(sl.start_time,'%Y-%m-%d %T')   <![CDATA[>= #{param.start_time}]]>
	</if>
	<if test="param.end_time!=null and param.end_time!=''">
		and date_format(sl.start_time,'%Y-%m-%d %T')  <![CDATA[<= #{param.end_time}]]>
	</if>
	
	<if test="param.sort!=null">
	order by
 	<foreach collection="param.sort" index="index" item="sort" separator=",">
 	  ${sort.field}  ${sort.dir}
 	</foreach>
 	</if>
  </select>
  <select id="queryOneShellOrderById" parameterType="java.lang.Long" resultType="java.util.Map">
  	SELECT sl.id, sl.shell_code, sl.shop_id, sl.money_pre, sl.money_platform, date_format(sl.create_time,'%Y-%m-%d %T') as create_time, sl.trade_type, sl.trader_id, 
    sl.money_trade, sl.trade_time, sr.shell_state,e.enterprise_name,p.principal,be.name AS brand_name,shop.shop_name, temp.seller_money
FROM t_biz_order_shell_list sl
LEFT JOIN t_biz_order_shell_state_relation sr ON sr.shell_id = sl.id AND sr.state_time = (SELECT MAX(state_time) FROM t_biz_order_shell_state_relation WHERE shell_id = sr.shell_id)
LEFT JOIN t_biz_shop shop ON shop.id = sl.shop_id
LEFT JOIN t_biz_brand b ON b.id = shop.brand_id
LEFT JOIN t_biz_build_enterprise be ON be.id = b.enterprise_id
LEFT JOIN t_biz_partner p ON p.id = shop.citypartner_id
LEFT JOIN t_biz_enterprise e ON p.enterprise_id = e.id
LEFT JOIN (SELECT sl.id, ROUND(SUM(bd.amount),2) AS seller_money
FROM t_biz_order_shell_list sl
LEFT JOIN t_biz_order o ON o.shell_id = sl.id
LEFT JOIN t_biz_seller_balance_detail bd ON bd.order_id = o.id

WHERE bd.id IS NOT NULL  
GROUP BY sl.id) temp ON temp.id = sl.id

where sl.id = #{id,jdbcType=BIGINT}
 </select>
</mapper>