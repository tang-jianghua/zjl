<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.mfangsoft.zhuangjialong.app.applogin.mapper.CustomerEntityMapper">
	<resultMap id="BaseResultMap"
		type="com.mfangsoft.zhuangjialong.app.applogin.model.CustomerEntity">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="head_url" jdbcType="VARCHAR" property="head_url" />
		<result column="gender" jdbcType="INTEGER" property="gender" />
		<result column="birthday" jdbcType="DATE" property="birthday" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="property" jdbcType="INTEGER" property="property" />
		<result column="inviter_id" jdbcType="BIGINT" property="inviter_id" />
		<result column="exshopper_id" jdbcType="BIGINT" property="exshopper_id" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="level" jdbcType="INTEGER" property="level" />
		 <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
		<!-- <result column="class_id" jdbcType="INTEGER" property="class_id" /> 
			<result column="space" jdbcType="INTEGER" property="space" /> <result column="style" 
			jdbcType="INTEGER" property="style" /> -->
		<result column="isreceive_message_order" jdbcType="TINYINT"
			property="isreceive_message_order" />
		<result column="isreceive_message_appointment" jdbcType="TINYINT"
			property="isreceive_message_appointment" />
		<result column="isreceive_message_note" jdbcType="TINYINT"
			property="isreceive_message_note" />
			<result column="isreceive_message_smart" jdbcType="TINYINT"
			property="isreceive_message_smart" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, account, password, head_url, gender, birthday,
		phone, property,
		inviter_id,
		exshopper_id, email, level,create_time
	</sql>
	<select id="selectByAccount" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_app_customer
		where account = #{account,jdbcType=VARCHAR}
	</select>
	<select id="queryreceivemessage" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		isreceive_message_order,isreceive_message_appointment,isreceive_message_note,isreceive_message_smart
		from t_app_customer
		where id = #{customer_id,jdbcType=VARCHAR}
	</select>
	<select id="selectInvitCount" resultType="java.lang.Integer">
		SELECT COUNT(1) from
		t_app_customer WHERE inviter_id
		=#{customer_id,jdbcType=BIGINT};
	</select>
	<select id="selectInvitCountByDate" parameterType="java.util.Map" resultType="com.mfangsoft.zhuangjialong.app.applogin.model.CustomerEntity">
	SELECT
	CASE head_url
	WHEN 'http://www.kaolaj.com/file/upload/sys_img/default_customer_head.png'
	THEN NULL
	END AS head_url,
	CONCAT(LEFT(account,3),'****',RIGHT(account,4)) AS account from
	t_app_customer WHERE
	create_time &gt;= #{start_time,jdbcType=TIMESTAMP}
	AND create_time &lt;= #{end_time,jdbcType=TIMESTAMP}
	AND inviter_id = #{customer_id,jdbcType=BIGINT};
	</select>
	
	<select id="selectExshopperIdCount" resultType="java.lang.Integer">
		SELECT COUNT(1) from
		t_app_customer WHERE exshopper_id
		=#{id,jdbcType=BIGINT};
	</select>
	
	<select id="selectGuildCustomerList" resultMap="BaseResultMap">
		SELECT id,NAME, account as phone,head_url,DATE_FORMAT(create_time,'%Y-%m-%d') as create_time 
		FROM t_app_customer 
		WHERE exshopper_id =#{seller_id} order by create_time desc
	</select>
	
	<select id="selectGuildCustomerListPage" resultMap="BaseResultMap">
		SELECT id,NAME, account as phone,head_url,DATE_FORMAT(create_time,'%Y-%m-%d') as create_time FROM t_app_customer WHERE exshopper_id =#{param.id} order by create_time desc
	</select>
	
	<select id="selectGuildCustomerCount" resultType="java.lang.Integer">
		SELECT count(1) FROM t_app_customer WHERE exshopper_id = #{exshopper_id,jdbcType=BIGINT}
	</select>
	<select id="selectUnReadGuildCustomerCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM t_app_customer c,t_app_seller s WHERE c.exshopper_id = #{exshopper_id,jdbcType=BIGINT} AND s.id = c.exshopper_id AND c.create_time &gt; s.view_tuiguang_time
	</select>
	<!-- <select id="selectFavorByPrimaryKey" parameterType="com.mfangsoft.zhuangjialong.common.model.Page" 
		resultType="java.util.Map"> select class_id, space, style,#{param.region_code,jdbcType=VARCHAR} 
		region_code from t_app_customer where id = #{param.customer_id,jdbcType=BIGINT} 
		</select> -->

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_app_customer
		where id = #{id,jdbcType=BIGINT}
	</select>
		<select id="selectByName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_app_customer
		where name = #{name,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		t_app_customer
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.mfangsoft.zhuangjialong.app.applogin.model.CustomerEntity">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into t_app_customer (name, account, password,
		head_url, gender,
		birthday,
		phone, property, inviter_id,
		exshopper_id, email, level,
		class_id, space, style,create_time
		)
		values (#{name,jdbcType=VARCHAR},
		#{account,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{head_url,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
		#{birthday,jdbcType=DATE},
		#{phone,jdbcType=VARCHAR},
		#{property,jdbcType=INTEGER},
		#{inviter_id,jdbcType=BIGINT},
		#{exshopper_id,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR},
		#{level,jdbcType=INTEGER},
		#{class_id,jdbcType=INTEGER},
		#{space,jdbcType=INTEGER},
		#{style,jdbcType=INTEGER}
		#{create_time,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.mfangsoft.zhuangjialong.app.applogin.model.CustomerEntity">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into t_app_customer
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="head_url != null">
				head_url,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="property != null">
				property,
			</if>
			<if test="inviter_id != null">
				inviter_id,
			</if>
			<if test="exshopper_id != null">
				exshopper_id,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="level != null">
				level,
			</if>
			<if test="class_id != null">
				class_id,
			</if>
			<if test="space != null">
				space,
			</if>
			<if test="style != null">
				style,
			</if>
			<if test="create_time != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="head_url != null">
				#{head_url,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=INTEGER},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=DATE},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="property != null">
				#{property,jdbcType=INTEGER},
			</if>
			<if test="inviter_id != null">
				#{inviter_id,jdbcType=BIGINT},
			</if>
			<if test="exshopper_id != null">
				#{exshopper_id,jdbcType=BIGINT},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				#{level,jdbcType=INTEGER},
			</if>
			<if test="class_id != null">
				#{class_id,jdbcType=INTEGER},
			</if>
			<if test="space != null">
				#{space,jdbcType=INTEGER},
			</if>
			<if test="style != null">
				#{style,jdbcType=INTEGER},
			</if>
			<if test="create_time != null">
				#{create_time,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.mfangsoft.zhuangjialong.app.applogin.model.CustomerEntity">
		update t_app_customer
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="head_url != null">
				head_url = #{head_url,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=INTEGER},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="property != null">
				property = #{property,jdbcType=INTEGER},
			</if>
			<if test="inviter_id != null">
				inviter_id = #{inviter_id,jdbcType=BIGINT},
			</if>
			<if test="exshopper_id != null">
				exshopper_id = #{exshopper_id,jdbcType=BIGINT},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				level = #{level,jdbcType=INTEGER},
			</if>
			<if test="class_id != null">
				class_id = #{class_id,jdbcType=INTEGER},
			</if>
			<if test="space != null">
				space = #{space,jdbcType=INTEGER},
			</if>
			<if test="style != null">
				style = #{style,jdbcType=INTEGER},
			</if>
					<if test="create_time != null">
				create_time = #{create_time,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.mfangsoft.zhuangjialong.app.applogin.model.CustomerEntity">
		update t_app_customer
		set name =
		#{name,jdbcType=VARCHAR},
		account = #{account,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		head_url =
		#{head_url,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=INTEGER},
		birthday = #{birthday,jdbcType=DATE},
		phone =
		#{phone,jdbcType=VARCHAR},
		property = #{property,jdbcType=INTEGER},
		inviter_id = #{inviter_id,jdbcType=BIGINT},
		exshopper_id =
		#{exshopper_id,jdbcType=BIGINT},
		email = #{email,jdbcType=VARCHAR},
		level = #{level,jdbcType=INTEGER},
		class_id =
		#{class_id,jdbcType=INTEGER},
		space = #{space,jdbcType=INTEGER},
		style =
		#{style,jdbcType=INTEGER},
		create_time = #{create_time,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updatereceivemessage"
		parameterType="com.mfangsoft.zhuangjialong.app.applogin.model.CustomerEntity">
		update t_app_customer
		<set>
			<if test="isreceive_message_order != null">
				isreceive_message_order =
				#{isreceive_message_order,jdbcType=TINYINT},
			</if>
			<if test="isreceive_message_appointment != null">
				isreceive_message_appointment = #{isreceive_message_appointment,jdbcType=TINYINT},
			</if>
			<if test="isreceive_message_note != null">
				isreceive_message_note = #{isreceive_message_note,jdbcType=TINYINT}
			</if>
			<if test="isreceive_message_smart != null">
				isreceive_message_smart = #{isreceive_message_smart,jdbcType=TINYINT}
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT};
	</update>
	<select id="queryCustomerForPage" resultType="java.util.Map"
		parameterType="com.mfangsoft.zhuangjialong.common.model.Page">
		select
		t.name as customer_name, t.account as customer_account, t.id, inv.inviter_count, t.phone,t.gender,po.points,t.property,sel.account,sel.name as sell_name,if(cus.account is not null, cus.account,CONCAT(sel.account,'(推广)' )) as invieter_name,date_format(t.create_time,'%Y-%m-%d %T') as create_time, caddress.region_code
		from t_app_customer t 
		left join (select temp.id, sum(temp.poi) as
		points from v_customer_point temp group by temp.id) po on t.id=po.id

		left join t_app_seller sel on t.exshopper_id = sel.id

		left join t_app_customer_address caddress on t.id = caddress.customer_id and caddress.state=1
		
		left join t_app_customer cus on t.inviter_id = cus.id
		
		left join (
SELECT   COUNT(1) AS inviter_count, t.inviter_id
FROM     t_app_customer t
WHERE    t.inviter_id IS NOT NULL GROUP BY t.inviter_id) inv on t.id= inv.inviter_id
		
		<if test="param.kfzys==null or param.kfzys==''">
		
		
		
		right JOIN (select *  from  (select o.customer_id,b.id as brand_id, par.id as partner_id, e.id as ent_id, sp.id as shop_id from t_biz_order o 
                    LEFT JOIN t_biz_brand b ON b.id = o.brand_id
                    LEFT JOIN t_biz_partner par ON par.id = b.citypartner_id
                    LEFT JOIN t_biz_enterprise e ON e.id = par.enterprise_id
                    LEFT JOIN t_biz_shop sp ON sp.id = o.shop_id 
                    
                    where 1=1
                    
                    <if test="param.brand_id!=null and param.brand_id!=''">
		
		   and   b.id=#{param.brand_id}
		group by o.customer_id 
		
		</if>
		<if test="param.ent_id!=null and param.ent_id!=''">
		
		  and  e.id=#{param.ent_id}
		group by o.customer_id 
		
		</if>
		<if test="param.partner_id!=null and param.partner_id!=''">
		
		  and   par.id=#{param.partner_id}
		  group by o.customer_id 
		
		</if>
		<if test="param.shop_id!=null and param.shop_id!=''">
		
		 and sp.id=#{param.shop_id}
		group by o.customer_id 
		
		</if>
                    
                    
                    
                    union all
                    SELECT ap.customer_id, apinfo.brand_id,par.id AS partner_id,e.id AS ent_id,  apinfo.shop_id
                    FROM   t_biz_appointment ap
                           LEFT JOIN t_biz_appointment_info apinfo ON ap.id = apinfo.appointment_id
                           LEFT JOIN t_biz_brand b ON b.id = apinfo.brand_id
                           LEFT JOIN t_biz_partner par ON par.id = b.citypartner_id
                           LEFT JOIN t_biz_enterprise e ON e.id = par.enterprise_id
                           LEFT JOIN t_biz_shop sp ON sp.id = apinfo.shop_id
                           
                           where 1=1
                           <if test="param.brand_id!=null and param.brand_id!=''">
		
		   and   b.id=#{param.brand_id}
		group by ap.customer_id 
		
		</if>
		<if test="param.ent_id!=null and param.ent_id!=''">
		
		  and  e.id=#{param.ent_id}
		group by ap.customer_id 
		
		</if>
		<if test="param.partner_id!=null and param.partner_id!=''">
		
		  and   par.id=#{param.partner_id}
		  group by ap.customer_id 
		
		</if>
		<if test="param.shop_id!=null and param.shop_id!=''">
		
		 and sp.id=#{param.shop_id}
		group by ap.customer_id 
		
		</if>
                           
                    )tp group by tp.customer_id ) temp  ON temp.customer_id = t.id
         </if>           
		
		where 1=1 

		<if test="param.name!=null and param.name!=''">

			and t.name like CONCAT('%', #{param.name},'%')

		</if>
		<if test="param.phone_num!=null and param.phone_num!=''">

			and t.phone like CONCAT('%', #{param.phone_num},'%')

		</if>

		<if test="param.property!=null and param.property!=''">

			and t.property =#{param.property}

		</if>
		<if test="param.province!=null and param.province!=''">

			and CONCAT('',left(caddress.region_code,2),'0000')= #{param.province}

		</if>

		<if test="param.city!=null and param.city!=''">

			and CONCAT('',left(caddress.region_code,4),'00')= #{param.city}

		</if>

		<if test="param.county!=null and param.county!=''">

			and caddress.region_code= #{param.county}

		</if>
		<if test="param.seller_name!=null and param.seller_name!=''">

			and sel.name like CONCAT('%', #{param.seller_name},'%')

		</if>
		<if test="param.special_name!=null and param.special_name!=''">

			and sel.name is null

		</if>
		
		
		 <if test="param.sort!=null">
 		order by
 		<foreach collection="param.sort" index="index" item="sort" separator=",">
 	
 	 	 ${sort.field}  ${sort.dir}
 	
 		</foreach>
 	</if>
	</select>
	<select id="selectCustomerById" resultType="java.util.Map"
		parameterType="java.lang.Long">


		select t.phone,t.head_url, t.email, t.name as customer_name,t.birthday,CONCAT(caddress.p,caddress.name,caddress.address_details) as address,
		t.gender,po.points,t.property,sel.account,sel.name
		,sumorder.order_count,
		temp.space,temp.style,temp.class_name,
		sumorder.order_t

		from t_app_customer t left join (select temp.id, sum(temp.poi) as points
		from v_customer_point temp group by temp.id) po on t.id=po.id

		left join t_app_seller sel on t.inviter_id = sel.id
		left join (select  a.customer_id,re.name, (select reg.name from region reg where  reg.code=CONCAT('',left(a.region_code,2),'0000')) as p, a.address_details,a.state FROM  
t_app_customer_address a, region re where re.code = a.region_code  )  caddress on t.id = caddress.customer_id
		and caddress.state=1
		left join (

		select t.id, count(t.id) as order_count, sum(ifnull(o.order_price,0)) as
		order_t from t_app_customer t left join t_biz_order o on t.id =
		o.customer_id

		group by t.id) sumorder on sumorder.id = t.id

		left join (
		select spacetable.customer_id, spacetable.space,styletable.style,
		classtable.class_name from (select uq.customer_id,
		group_concat(att.value) as space from t_biz_userequipment
		uq,t_biz_class_attr_value att where

		find_in_set(att.id,uq.space)!=0 and att.attr_id = 1 group by uq.customer_id) spacetable,



		(select uq.customer_id, group_concat(att.value) as style from
		t_biz_userequipment uq,t_biz_class_attr_value att where

		find_in_set(att.id,uq.style)!=0 and att.attr_id = 2 group by uq.customer_id) styletable,



		(select uq.customer_id, group_concat(att.name) as class_name from
		t_biz_userequipment uq,t_biz_build_class att where

		find_in_set(att.id,uq.class_id)!=0 group by uq.customer_id) classtable
		where

		spacetable.customer_id=styletable.customer_id and styletable.customer_id=classtable.customer_id

		) temp on temp.customer_id = t.id
		where t.id=#{customer_id}

	</select>
	
	<select id="queryCustomerBackForPage" resultType="java.util.Map"
		parameterType="com.mfangsoft.zhuangjialong.common.model.Page">
	SELECT IFNULL(c.level,0) AS level,c.id, c.NAME AS customer_name,c.phone,DATE_FORMAT(c.create_time, '%Y-%m-%d %H:%i:%s') as create_time, s.name  AS seller_name,s.phone AS seller_phone
 
 FROM t_app_customer c
 LEFT JOIN t_app_seller s ON s.id = c.exshopper_id
  LEFT JOIN t_biz_partner p ON s.partner_id = p.id
  where s.id = #{param.id}

		<if test="param.customer_name!=null and param.customer_name!=''">

			and c.name like CONCAT('%', #{param.customer_name},'%')

		</if>
		<if test="param.customer_phone!=null and param.customer_phone!=''">

			and c.phone like CONCAT('%', #{param.customer_phone},'%')

		</if>

		<if test="param.principal!=null and param.principal!=''">

			and p.principal like CONCAT('%', #{param.principal},'%')

		</if>
	
		<if test="param.seller_name !=null and param.seller_name!=''">

		and s.name like CONCAT('%', #{param.seller_name},'%') 
	</if>
		order by c.create_time desc
  </select>
  
  <select id="selectAllcustomer" resultMap="BaseResultMap">
  
     
  select
		<include refid="Base_Column_List" />
		from t_app_customer
  
  </select>
  
</mapper>